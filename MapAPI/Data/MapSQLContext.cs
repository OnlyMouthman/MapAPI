// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using MapAPI.Models.Test;
using Microsoft.EntityFrameworkCore;

namespace MapAPI.Data;

public partial class MapSQLContext : DbContext
{
    public MapSQLContext(DbContextOptions<MapSQLContext> options)
        : base(options)
    {
    }

    public virtual DbSet<GeoData> GeoData { get; set; }

    public virtual DbSet<GeoDataImage> GeoDataImage { get; set; }

    public virtual DbSet<Tag> Tag { get; set; }

    public virtual DbSet<Test> Test { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<GeoData>(entity =>
        {
            entity.Property(e => e.Chinese)
                .HasMaxLength(50)
                .HasComment("中文描述");
            entity.Property(e => e.Date)
                .HasComment("日期")
                .HasColumnType("date");
            entity.Property(e => e.English)
                .HasMaxLength(50)
                .HasComment("英文描述");
            entity.Property(e => e.Geo)
                .HasComment("geography")
                .HasColumnType("geometry");
            entity.Property(e => e.Tag).HasComment("對應Tag表單");

            entity.HasOne(d => d.TagNavigation).WithMany(p => p.GeoData)
                .HasForeignKey(d => d.Tag)
                .HasConstraintName("FK_GeoData_Tag");
        });

        modelBuilder.Entity<GeoDataImage>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.FileName).HasMaxLength(200);

            entity.HasOne(d => d.GeoDataNavigation).WithMany()
                .HasForeignKey(d => d.GeoData)
                .HasConstraintName("FK_GeoDataImage_GeoData");
        });

        modelBuilder.Entity<Tag>(entity =>
        {
            entity.Property(e => e.Chinese)
                .HasMaxLength(50)
                .HasComment("Tag Chinese describe");
            entity.Property(e => e.English)
                .HasMaxLength(50)
                .HasComment("Tag English describe");
            entity.Property(e => e.Level).HasComment("Tag level");
        });

        OnModelCreatingGeneratedFunctions(modelBuilder);
        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}